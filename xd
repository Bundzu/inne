#lab 1

Zadanie 1. Zmodyfikuj program „Hello” w tali sposób, by drukował twoje imię i wiek. Skompiluj i
uruchom ten program.

package zad1;
public class Zad1 {

    public static void main(String[] args) {
        System.out.println("Kamil 31 lat");
    }
    
}

Zadanie 2. Zmodyfikuj program pierwszy tak aby drukował napis litery X zapisany przy pomocy dużej
liter X tak jak na rysunku.
public class Zad1 {

    public static void main(String[] args) {
        System.out.println("X X \n X \nX X");
    }
    
}

Zadanie 3. Napisać program pobierający dwie liczby rzeczywiste z klawiatury, a następnie
wykonuje na nich takie działania arytmetyczne, jak: dodawanie, odejmowanie, mnożenie
i dzielenie. Wynik tych działań wypisuje na ekran konsoli. Jak zareaguje, gdy dokonamy
dzielenia przez zero?

public class Zad1 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        System.out.println("Podaj liczbe a");
        double liczba1 = in.nextDouble();
        System.out.println("Podaj liczbe b");
        double liczba2 = in.nextDouble();
        System.out.printf(Locale.GERMANY, "a+b %g\n", liczba1+liczba2);
        System.out.printf(Locale.GERMANY, "a-b %g\n", liczba1-liczba2);
        System.out.printf(Locale.GERMANY, "a*b %g\n", liczba1*liczba2);
        System.out.printf(Locale.GERMANY, "a/b %g\n", liczba1/liczba2);
    }
    
}

Zadanie 4. Napisz program, który pyta o promień koła, a następnie drukuje jego
powierzchnię.

package zad1;
import java.util.*;

public class Zad1 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        System.out.println("Podaj promien");
        double r = in.nextDouble();
        double p = Math.PI*r*r;
        System.out.printf(Locale.GERMANY, "%g\n", p);
    }
    
}

Zadanie 5. Należy napisać program zamieniający kąt podany w stopniach na kąt w radianach.

package zad1;
import java.util.*;
public class Zad1 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        System.out.println("Podaj kat w stopniach");
        double k = in.nextDouble();
        double a = (k*Math.PI)/180;
        System.out.printf(Locale.GERMANY, "Radiany: %g\n", a);
    }
}

Zadanie 6.Napisz program obliczający wartości wielomianu 𝐴(𝑥) = 𝑎𝑥2 + 𝑏𝑥 + 𝑐 oraz
𝐵(𝑥) = 𝑎𝑥3 + 𝑏𝑥2 + 𝑐𝑥 + 𝑑 dla pobranej z klawiatury liczby 𝑥 oraz zadanych w kodzie
programu współczynników 𝑎, 𝑏, 𝑐 i 𝑑. Wynik tych działań program wypisuje na ekranie
konsoli.

package zad1;
import java.util.*;
public class Zad1 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        System.out.println("Podaj x");
        double x = in.nextDouble();
        
        System.out.println("Podaj a");
        double a = in.nextDouble();
        System.out.println("Podaj b");
        double b = in.nextDouble();
        System.out.println("Podaj c");
        double c = in.nextDouble();
        System.out.println("Podaj d");
        double d = in.nextDouble();
        
        double wynik1 = a*x*x+b*x+c;
        double wynik2 = a*x*x*x+b*x*x+c*x+d;
        
        System.out.printf("%g\n", wynik1);
        System.out.printf("%g\n", wynik2);
        
    }
}

Zadanie 7. Wykonaj ten sam program co w zadaniu 6 używając algorytmu Hornera.

package zad1;
import java.util.*;

public class Zad1 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        System.out.println("Podaj x");
        double x = in.nextDouble();
        
        System.out.println("Podaj a");
        double a = in.nextDouble();
        System.out.println("Podaj b");
        double b = in.nextDouble();
        System.out.println("Podaj c");
        double c = in.nextDouble();
        System.out.println("Podaj d");
        double d = in.nextDouble();
        
       double wynik1 = x*(a*x+b)+c;
       double wynik2 = x*(x*(a*x+b)+c)+d;
        
       System.out.printf("%g\n", wynik1);
       System.out.printf("%g\n", wynik2);
        
    }
}

Zadanie 8. Napisz program obliczający pole powierzchni bocznej i objętość walca.

package zad1;
import java.util.*;
public class Zad1 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        System.out.println("Podaj r");
        double r = in.nextDouble();
        System.out.println("Podaj h");
        double h = in.nextDouble();
        
        double Pp = Math.PI*Math.pow(r,2);
        double Pb = 2*Math.PI*r*h;
        double V = Pp*h;
        
      
       System.out.printf("objetosc: %g pole powierzchni: %g\n", V, Pb);
        
    }
}

#lab 2

Zadanie 1. Napisz program, który będzie wykonywał dodawanie i dzielenie
dwóch liczb rzeczywistych wczytanych z klawiatury dokonujący sprawdzenia,
czy mianownik nie równy zero.
a) Co się stanie gdy, liczba przez, którą dzielimy będzie bliska zera, licznik
bardzo dużą liczbą?
b) Co się stanie gdy do jedności dodamy liczbę małą np. 1e-20?

public class Zad1 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        System.out.println("Podaj liczbe a");
        double liczba1 = in.nextDouble();
        System.out.println("Podaj liczbe b");
        double liczba2 = in.nextDouble();
        System.out.printf("a+b %g\n", liczba1+liczba2);
        if(liczba2!=0){
            System.out.printf("a/b %g\n", liczba1/liczba2);
        }
        else
        System.out.printf("nie mozna dzielic przez zero");
        
    }
}
a) Wykona dodawanie i dzielenie wyświetlając wynik w notacji naukowej
b) Liczba 1e-20 nie zostanie uwzględniona a wynik pozostanie taki jak liczba jedności

Zadanie 2. Należy napisać program obliczający współrzędne punku przecięcia
się funkcji liniowej 𝑦 = 𝑎𝑥 + 𝑏, 𝑎 ≠ 0 z osią 𝑂𝑋. Program sprawdza
poprawność danych wprowadzonych przez użytkownika.

public class Zad1 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        System.out.println("Podaj liczbe a");
        double a = in.nextDouble();
        System.out.println("Podaj liczbe b");
        double b = in.nextDouble();
        
        if(a!=0){
            System.out.printf("wynik %g\n", -b/a);
        }
        else
        System.out.printf("a nie moze sie rownac 0\n");
        
    }
}

Zadanie 3. Napisz program obliczający pole powierzchni bocznej i objętość
walca, który będzie sprawdzał czy użytkownik podał poprawnie promień i
wysokość.

public class Zad1 {

    public static void main(String[] args) {
         Scanner in = new Scanner(System.in);
        System.out.println("Podaj r");
        double r = in.nextDouble();
        System.out.println("Podaj h");
        double h = in.nextDouble();
        

        if(r!=0 && h!=0){
            double Pp = Math.PI*Math.pow(r,2);
            double Pb = 2*Math.PI*r*h;
            double V = Pp*h;
            System.out.printf("objetosc: %g pole powierzchni: %g\n", V, Pb);
        }
        else
        System.out.printf("wartosc nie moze sie rownac 0\n");
        
    }
}

Zadanie 4. Program znajduje rozwiązanie pierwiastki kwadratowego
𝑎𝑥2 + 𝑏𝑥 + 𝑐, należy zabezpieczyć go przed podaniem przez użytkownika
wartości współczynnika redukującej równanie kwadratowe do równania
liniowego.

public class Zad1 {

    public static void main(String[] args) {
         Scanner in = new Scanner(System.in);
        System.out.println("Podaj a");
        double a = in.nextDouble();
        System.out.println("Podaj b");
        double b = in.nextDouble();
        System.out.println("Podaj c");
        double c = in.nextDouble();
        
        if(a!=0){
            double d = Math.pow(b,2)-(4*a*c);
            double x1 = (-b-Math.sqrt(d))/(2*a);
            double x2 = (-b+Math.sqrt(d))/(2*a);
            if (d<0){
            System.out.printf("rownanie nie pierwiastkow");
            }
            if (d>0){
                System.out.printf("Miejsca zerowe: %g %g\n", x1,x2);
            }
        }
        else
        System.out.printf("wartosc nie moze sie rownac 0\n");
    }
}


Zadanie 5. Należy napisać metodę w klasie Algorytm i program obliczający
rozwiązanie układu równań liniowy 2 × 2 wykorzystujący metodę
wyznacznikową dla macierzy dwu wymiarowych.
{𝑎11𝑥1 + 𝑎12𝑥2 = 𝑏1
𝑎21𝑥1 + 𝑎22𝑥2 = 𝑏2

public class JavaApplication21 {
    
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        double [][] a = new double [2][2];
        double [] b = new double [2];
        for (int i = 0; i<2; i++){
            for (int j = 0; j<2; j++){
                System.out.printf("Podaj a [%d][%d]:", i, j);
                a[i][j] = in.nextDouble();
            }
            System.out.printf("Podaj b[%d]:", i);
            b[i] = in.nextDouble();
        }
        Algorytm at = new Algorytm();
        int t = at.uk(a, b);
        if (t == 2){
            System.out.printf("x[0]=%g\n", b[0]);
            System.out.printf("x[1]=%g\n", b[1]);
        }
        else
            if (t==1)
                System.out.printf("Uklad jest sprzeczny");
        else
                System.out.printf("Uklad jest nieoznaczony");
    }
}
package javaapplication21;
/**
 * @author Kamil Farnicki
 */
public class Algorytm {
    public int uk(double [][] a, double[] b){
        double W = a [0][0] * a [1][1] - a[0][1] * a[1][0];
        double Wx = b[0] * a[1][1] - a[0][1] * b[1];
        double Wy = a[0][0] * b[1] - b[0] * a [1][0];
        if (W != 0){
            b[0] = Wx / W;
            b[1] = Wy / W;
            return 2;
        }
        else
            if (Wx == 0 && Wy == 0)
                return 0;
        else
                return 1;
    }
    
}

Zadanie 6. Należy napisać metodę w klasie Algorytm i program obliczający
rozwiązanie układu równań liniowy 3 × 3 wykorzystujący metodę
wyznacznikową dla macierzy trzy wymiarowych.
{
𝑎11𝑥1 + 𝑎12𝑥2 + 𝑎13𝑥3 = 𝑏1
𝑎21𝑥1 + 𝑎22𝑥2 + 𝑎23𝑥3 = 𝑏2
𝑎31𝑥1 + 𝑎32𝑥2 + 𝑎33𝑥3 = 𝑏3

package javaapplication21;
import java.util.*;

public class JavaApplication21 {
    
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        double [][] a = new double [3][3];
        double [] b = new double [3];
        for (int i = 0; i<3; i++){
            for (int j = 0; j<3; j++){
                System.out.printf("Podaj a [%d][%d]:", i, j);
                a[i][j] = in.nextDouble();
            }
            System.out.printf("Podaj b[%d]:", i);
            b[i] = in.nextDouble();
        }
        Algorytm at = new Algorytm();
        int t = at.uk(a, b);
        if (t == 2){
            System.out.printf("x[0]=%g\n", b[0]);
            System.out.printf("x[1]=%g\n", b[1]);
        }
        else
            if (t==1)
                System.out.printf("Uklad jest sprzeczny");
        else
                System.out.printf("Uklad jest nieoznaczony");
    }
}

package javaapplication21;
public class Algorytm {
    public int uk(double [][] a, double[] b){
        double W = ((a[0][0] * a[1][1] * a[2][2])+(a[0][1] * a[1][2] * a[2][1]) + (a[0][2] * a[1][0] * a[2][1]))
                -((a[0][2] * a[1][1] * a[2][1])+(a[0][0] * a[1][2] * a[2][1]) + (a[0][1] * a[1][0] * a[2][2]));
        double Wx = ((b[0] * a[1][1] * a[2][2])+(a[0][1] * a[1][2] * b[2]) + (a[0][2] * b[1] * a[2][1]))
                -((a[0][2] * a[1][1] * b[2])+(b[0] * a[1][2] * a[2][1]) + (a[0][1] * b[1] * a[2][2]));
        double Wy = ((a[0][0] * b[1] * a[2][2])+(b[0] * a[1][2] * a[2][1]) + (a[0][2] * a[1][0] * b[2]))
                -((a[0][2] * b[1] * a[2][1])+(a[0][0] * a[1][2] * b[2]) + (b[0] * a[1][0] * a[2][2]));
        double Wz = ((a[0][0] * a[1][1] * b[2])+(a[0][1] * b[1] * a[2][0]) + (b[0] * a[1][0] * a[2][1]))
                -((b[0] * a[1][1] * a[2][1])+(a[0][0] * b[1] * a[2][1]) + (a[0][1] * a[1][0] * b[2]));
        if (W != 0){
            b[0] = Wx / W;
            b[1] = Wy / W;
            b[2] = Wz / W;
            return 2;
        }
        else
            if (Wx == 0 && Wy == 0 && Wz == 0)
                return 0;
        else
                return 1;
    }
    
}

#lab 3

Zadanie 1. Napisz program, który będzie przepisywał wprowadzane linie tekstu na
ekran do momentu wpisania w nowej linii identyfikatora końca np. quit.
public class JavaApplication22 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in,"Cp1250");
        String s = "";
        while(!(s=in.nextLine()).equals("quit")){
            System.out.println(s);
    }
    }  
}

Zadanie 2. Napisz program zliczający we wprowadzanym tekście znak małej litery a.
package javaapplication22;
import java.util.*;
import java.util.regex.*;

public class JavaApplication22 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in,"Cp1250");
        Pattern pat = Pattern.compile("a");
        String s = "";
        int t = 0;
        s=in.nextLine();
        Matcher mat = pat.matcher(s);
        while(mat.find()) t++;
        System.out.println("liczba liter a: " + t);
    }  
}

Zadanie 3. Napisz program, który przepisując wejście na wyjście będzie zastępował
jednym znakiem odstępu każdy ciąg złożony z jednego lub kilku takich znaków.
package javaapplication22;
import java.util.*;
import java.util.regex.*;

public class JavaApplication22 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in,"Cp1250");
        String s = new String();
        System.out.println("Wpisz kolejne linie tekstu");
        System.out.println("zakonczenie quit w nowej linii");
        while (!(s = in.nextLine()).equals("quit"))
            if(!s.isEmpty()){
                String u = new String();
                String[] str = s.split("[ \t]");
                for (int i = 0; i < str.length; i++)
                    if (!str[i].isEmpty())
                        u+= str[i] + ' ';
                u = u.trim();
                System.out.println(u);
            }
    }  
}

Zadanie 4. Należy napisać program zliczający ilość wystąpienia we wprowadzanym
tekście dwuznak „ab”.
package javaapplication22;
import java.util.*;
import java.util.regex.*;

public class JavaApplication22 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in,"Cp1250");
        Pattern pat = Pattern.compile("ab");
        String s = "";
        int t = 0;
        s=in.nextLine();
        Matcher mat = pat.matcher(s);
        while(mat.find()) t++;
        System.out.println("liczba liter ab: " + t);
    }  
}

Zadanie 5. Napisz program zliczający ilość słów w tekście.
package javaapplication22;
import java.util.*;
import java.util.regex.*;

public class JavaApplication22 {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String s = "";
        System.out.println("Wpisz kolejne linie tekstu");
        System.out.println("quit aby zakonczyc");
        int t = 0;
        while (!(s = in.nextLine()).equals("quit"))
            if(!s.isEmpty()){
                String[] str = s.split("[ \t]");
                for (int i =0; i < str.length; i++)
                    if (!str[i].isEmpty()) t++;
            }
        System.out.printf("liczba slow w tekscie %d\n", t);
    }  
}

Zadanie 6. Napisz program, który każde słowo wypisze w osobnym wierszu.

Zadanie 7. Napisz program usuwający wszystkie początkowe znaki spacji i tabulacji z
każdej linii.

#lab 4

Zad 1. Użytkownik wprowadza dwie liczby rzeczywiste z konsoli. Liczby są
przedzielone jedną albo kilkoma spacjami. Spacje mogą również być
umieszczone na początku albo na końcu wprowadzanego łańcucha znaków.
Należy wysiedlić wprowadzone liczby oraz ich sumę. Program należy
zrealizować w interfejsie angielskim bez użycia skanera za pomocą
buforowanego streamera.

package javaapplication25;
import java.io.*;

public class JavaApplication25 {


    public static void main(String[] args)throws Exception {
        
        InputStreamReader r=new InputStreamReader(System.in);  
        BufferedReader br=new BufferedReader(r);  
        String napis=br.readLine();
        String[] napis1;
        napis=napis.trim();
        napis1=napis.split("\\s+");
        
        System.out.println(Double.parseDouble(napis1[0])+Double.parseDouble(napis1[1]));
     
    }
    
}

Zad2. We wprowadzonym wierszu użytkownik podał wpisał kilka liczb. Liczby są
przedzielone spacjami. Spacje mogą również występować na początku i na
końcu wprowadzonego łańcucha znaków. Należy obliczyć sumę podanych liczb.
Program należy zrealizować w interfejsie angielskim bez użycia skanera za
pomocą buforowanego streamera.

package javaapplication25;
import java.io.*;

public class JavaApplication25 {


    public static void main(String[] args)throws Exception {
        
        InputStreamReader r=new InputStreamReader(System.in);  
        BufferedReader br=new BufferedReader(r);  
        String napis=br.readLine();
        String[] napis1;
        napis=napis.trim();
        napis1=napis.split("\\s+");
        double wynik=0;
        for(int i=0;i<napis1.length;i++){
            wynik=wynik+Double.parseDouble(napis1[i]);
        }
        
        System.out.println(wynik);
     
    }
    
}


Zad 3. Program powtarza wprowadzane wiersze zawierające imię użytkownika
albo imię w sposób zdrobniały. Imię i zdrobnienie jest wpisane w programie.
package javaapplication25;
import java.io.*;

public class JavaApplication25 {


    public static void main(String[] args)throws Exception {
        
        InputStreamReader r=new InputStreamReader(System.in);  
        BufferedReader br=new BufferedReader(r);  
        String napis=br.readLine();
        if(napis.contains("Kamil") || napis.contains("Kamilek")){
        System.out.println(napis);
        }
    }
    
}

Zad 4. Należy napisać program zliczający słowa używając tym razem wyrażeń
regularnych.
package javaapplication25;
import java.io.*;

public class JavaApplication25 {


    public static void main(String[] args)throws Exception {
        
        InputStreamReader r=new InputStreamReader(System.in);  
        BufferedReader br=new BufferedReader(r);  
        String napis=br.readLine();
        String[] napis1;
        napis=napis.trim();
        napis1=napis.split("\\s+");
        System.out.println(napis1.length);
        
    }
    
}

Zad 5. Za pomocą wrażeń regularnych należy sprawdzić, czy łańcuch znaków
zawiera poprawnie napisaną datę.
package javaapplication25;
import java.io.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class JavaApplication25 {


    public static void main(String[] args)throws Exception {
        
        InputStreamReader r=new InputStreamReader(System.in);  
        BufferedReader br=new BufferedReader(r);  
        String napis=br.readLine();
        String[] napis1;
        Pattern pattern = Pattern.compile("\\d\\d-\\d\\d-\\d\\d\\d\\d");
        System.out.println(pattern.matcher("12-13-1111").matches());
        
    }
    
}


Zad 6. Napisz własną wersję programu powtarzającego linie tekstu zawierające
zadane słowo w prowadzanym tekście. Słowo nie może zawierać białych
znaków (dwie wersje – bez użycia wyrażeń regularnych i za pomocą wyrażeń
regularnych).

package javaapplication25;
import java.io.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class JavaApplication25 {


    public static void main(String[] args)throws Exception {
        
        InputStreamReader r=new InputStreamReader(System.in);  
        BufferedReader br=new BufferedReader(r);  
        String napis=br.readLine();
        String[] napis1;
        Pattern pattern = Pattern.compile(".*konrad.*");
        if(pattern.matcher(napis).matches()){
        System.out.println(napis);
        }
    }
    
}


Zad 7. Wiedząc, że Math.Random() zwraca wartość pseudolosową z zakresu 0
do 1, napisz pętlę, która wylosuje 100 liczb z zakresu od 0 do 100, wypisze
mniejsze od 20 i przerwie losowanie, gdy liczb spełniających warunek będzie 10
(w testach można zmienić podane wartości)

package javaapplication25;
import java.io.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class JavaApplication25 {


    public static void main(String[] args)throws Exception {
        
        InputStreamReader r=new InputStreamReader(System.in);  
        BufferedReader br=new BufferedReader(r);  
        String napis=br.readLine();
        String[] napis1;
        int ilosc=0;
        double x;
        for(int i=0;i<100;i++){
        x=Math.random()*100;
        if(x<20){
        ilosc++;
        System.out.println(x);
        if(ilosc==20)i=200;
        }
        
        }
        }
    
    
}

Zad 8. Napisz program tworzący tablicę trójkątną, w której rozmiar każdego
kolejnego wiersza jest większy o jeden. Wypełnij ją liczbami parzystymi od 10.
Wyświetl tablicę w czytelnej formie.

Zad 9. Napisz program wypełniający 26-elementową tablicę typu char
kolejnymi literami alfabetu od 'a' do 'z', a następnie wyświetlający te litery w
odwrotnej kolejności. Następnie zaprojektuj tablicę w systemie Unicode
przechowującą małe litery alfabetu polskiego i tablicę zawierającą duże znaki
alfabetu polskiego.


# lab 5
Pętla for i jej zastosowania

Zadanie 1. Napisz program wypisujący na ekran liczby kolejne liczby naturalne z
wykorzystaniem pętli for.

package javaapplication26;
import java.util.*;

public class JavaApplication26 {

    public static void main(String[] args) {
       Scanner in = new Scanner(System.in);
        System.out.println("podaj liczbe");
       double j = in.nextDouble();
      for(int i=1;i<=j;i++)
          System.out.println(i);
       
       
        
    }
    
}

Zadanie 2. Należy wydrukować tabliczkę mnożenia.

    public static void main(String[] args) {
       for(int i = 1;i<=10;i++){
           for(int j=1;j<=10;j++)
       System.out.printf("%4d",i*j);
       System.out.println();
       }
        
    }

Zadanie 3. Należy napisać program wczytujący do tablicy 𝑛 liczb całkowitych i
wypisujący element najmniejszy i największy.

package javaapplication26;
import java.util.*;

public class JavaApplication26 {

    public static void main(String[] args) {
       Scanner in = new Scanner(System.in);
        System.out.println("podaj liczbe");
       int j = in.nextInt();
       int[] table;
       table = new int[j];
      for(int i=0;i<j;i++){
          System.out.println("Podaj liczbe");
          table[i]=in.nextInt();
      }
       int min=table[0];
       int max=table[0];
       for(int i=1;i<j;i++){
       if(min>table[i]) min=table[i];
       if(max<table[i]) max=table[i];
       
       }
        System.out.println("Min: "+min);
        System.out.println("Max:"+max);
    }
    
}

Zadanie 4. W klasie Algorytm należy zaprojektować metodę zwracającą indeks
najmniejszego elementu z przekazanej tablicy liczb całkowitych oraz metodę
obliczającą średnią arytmetyczną liczb całkowitych zapisanych w tablicy.
Program wczytuje tablicę z konsoli użytkownika, konstruuje obiekt klasy
Algorytm i za pomocą metod klasy Algorytm drukuje najmniejszy element
tablicy i średnią arytmetyczną wszystkich elementów.

package javaapplication26;
import java.util.*;

public class JavaApplication26 {

    public static void main(String[] args) {
       Scanner in = new Scanner(System.in);
        System.out.println("podaj liczbe");
       int j = in.nextInt();
       int[] table;
       table = new int[j];
      for(int i=0;i<j;i++){
          System.out.println("Podaj liczbe");
          table[i]=in.nextInt();
      }
       int min=table[0];
       int max=table[0];
       for(int i=1;i<j;i++){
       if(min>table[i]) min=table[i];
       if(max<table[i]) max=table[i];
       
       }
       Algorytm algorytm=new Algorytm();
    System.out.println("Min: "+min);
    System.out.println("Max:"+max);
    System.out.println(algorytm.najmn(table,j));
    System.out.println(algorytm.sr(table));
    }
    
}

package javaapplication26;

/**
 *
 * @author Student
 */
public class Algorytm {
    public static int najmn(int[] tab, int j){
        int indeks=0,min=tab[0];
        for(int i=0;i<j;i++){
        if(min>tab[i]){
            min=tab[i];
            indeks=i;
        }
        
        }
        return indeks;
    }
 public double sr(int[] tab){
 double s=0.0;
 for(int i=0;i<tab.length;i++)
     s+=tab[i];
     double v=s/tab.length;
 
 return v;
 }
    
    
}

Zadanie 5. Należy napisać program sortujący liczby zapisane w tablicy liczb.
Dane są wprowadzane z konsoli użytkownika i wyprowadzane na ekran.

package javaapplication26;
import java.util.*;

public class JavaApplication26 {

    public static void main(String[] args) {
       Scanner in = new Scanner(System.in);
        System.out.println("podaj liczbe");
       int j = in.nextInt();
       int[] table;
       table = new int[j];
      for(int i=0;i<j;i++){
          System.out.println("Podaj liczbe");
          table[i]=in.nextInt();
      }

    Arrays.sort(table);
for(int i=0;i<j;i++){
          System.out.println(table[i]);
          
      }
    }
    
}

Zadanie 6. Należy przeciążyć metodę sortowania tak aby porządkowała liczby
od największej do najmniejszej.

Zadanie 7. Należy napisać program sortowania tak aby porządkowała liczby od
najmniejszej do największej. Liczby są zapisane w pliku tekstowym dane.txt
(pojedyncza liczba w jednej linii teksu). Program sprawdza poprawność
konwersji liczb z pliku.

package javaapplication26;
import java.util.*;

public class JavaApplication26 {

    public static void main(String[] args) {
       ArrayList<Integer> a=new ArrayList<>();
        Scanner in = new Scanner(System.in);
       String s="";
       System.out.print("Podaj nazwe pliku");
       String s1=in.nextLine();
       s1+=".txt";
       try{
       FileReader fr = new FileReader(s1);
       BufferReader br = new BufferReader(fr);
       while((s=br.readLine())!=null)
           a.add(Integer.parseInt(s));
       br.close();
       }
       catch(Exception e){
       System.out.println("Błąd!"+e);
       System.out.println("plik pozycja "+a.size());
       return;
       }
       
       }
       
    }
}

Zadanie 8. Metodę z zdanie 4 należy napisać w ten sposób, aby znajdowała
indeks największego elementu w ciągu liczb rozpoczynając poszukiwanie
elementu od indeksu 𝑖𝑚𝑖𝑛 i kończąc poszukiwanie na indeksie 𝑖𝑚𝑎𝑥.

Zadanie 9. Za pomocą metody z zadania 8 należy posortować ciąg liczb
całkowitych.

Zadanie 10. Należy napisać metodę sortującą ciąg liczb całkowitych za pomocą
metody sortowania przez wstawianie (ang. Insertion sort).

Zadanie 11. Należy napisać metodę sortującą ciąg liczb całkowitych za pomocą
metody sortowania przez podstawianie.
